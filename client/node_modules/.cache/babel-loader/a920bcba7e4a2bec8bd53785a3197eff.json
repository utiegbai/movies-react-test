{"ast":null,"code":"import _slicedToArray from \"/home/idee/Desktop/movie-bank/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/idee/Desktop/movie-bank/client/src/pages/Show.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport Header from '../components/Header';\nimport { Link } from 'react-router-dom';\nimport { Consumer } from '../context';\nexport default function Show({\n  match\n}) {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        step = _useState2[0],\n        setStep = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cast = _useState4[0],\n        setCast = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        crew = _useState6[0],\n        setCrew = _useState6[1];\n\n  useEffect(() => {\n    const fetchShowDetail = async () => {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/shows/${match.params.id}/detail`);\n      const data = await res.json();\n      setCast(data.cast);\n      setCrew(data.crew);\n    };\n\n    fetchShowDetail();\n  }, [match.params.id]);\n  return React.createElement(Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, value => {\n    const show = value.shows.find(show => {\n      return Number(show.id) === Number(match.params.id);\n    });\n    return React.createElement(\"div\", {\n      className: \"bg-gray-200 min-h-screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, show ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"mt-4 mx-4 sm:mx-0 text-3xl font-semibold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, show.name), React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Title 1\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Title 2\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Any content 1\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Any content 2\")))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Loading...\")));\n  });\n}","map":{"version":3,"sources":["/home/idee/Desktop/movie-bank/client/src/pages/Show.js"],"names":["React","useEffect","useState","Fragment","Tab","Tabs","TabList","TabPanel","Header","Link","Consumer","Show","match","step","setStep","cast","setCast","crew","setCrew","fetchShowDetail","res","fetch","process","env","REACT_APP_API_URL","params","id","data","json","value","show","shows","find","Number","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,eAAe,SAASC,IAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AAAA,oBACbV,QAAQ,CAAC,CAAD,CADK;AAAA;AAAA,QAC/BW,IAD+B;AAAA,QACzBC,OADyB;;AAAA,qBAEbZ,QAAQ,CAAC,EAAD,CAFK;AAAA;AAAA,QAE/Ba,IAF+B;AAAA,QAEzBC,OAFyB;;AAAA,qBAGbd,QAAQ,CAAC,EAAD,CAHK;AAAA;AAAA,QAG/Be,IAH+B;AAAA,QAGzBC,OAHyB;;AAKvCjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,eAAe,GAAG,YAAY;AAClC,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,UAASZ,KAAK,CAACa,MAAN,CAAaC,EAAG,SAA3D,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AAEAZ,MAAAA,OAAO,CAACW,IAAI,CAACZ,IAAN,CAAP;AACAG,MAAAA,OAAO,CAACS,IAAI,CAACV,IAAN,CAAP;AACD,KAND;;AAQAE,IAAAA,eAAe;AAChB,GAVQ,EAUN,CAACP,KAAK,CAACa,MAAN,CAAaC,EAAd,CAVM,CAAT;AAYA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIG,KAAK,IAAI;AACT,UAAMC,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBF,IAAI,IAAI;AACpC,aAAOG,MAAM,CAACH,IAAI,CAACJ,EAAN,CAAN,KAAoBO,MAAM,CAACrB,KAAK,CAACa,MAAN,CAAaC,EAAd,CAAjC;AACD,KAFY,CAAb;AAIA,WACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACII,IAAI,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,0CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2DA,IAAI,CAACI,IAAhE,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,EAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CANF,EASE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CATF,CAFF,CADI,GAwFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzFJ,CAFF,CADF;AAiGD,GAvGH,CADF;AA2GD","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nimport Header from '../components/Header';\nimport { Link } from 'react-router-dom';\nimport { Consumer } from '../context';\n\nexport default function Show ({ match }) {\n  const [ step, setStep ] = useState(1)\n  const [ cast, setCast ] = useState([]);\n  const [ crew, setCrew ] = useState([]);\n\n  useEffect(() => {\n    const fetchShowDetail = async () => {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/shows/${match.params.id}/detail`)\n      const data = await res.json()\n\n      setCast(data.cast)\n      setCrew(data.crew)\n    }\n\n    fetchShowDetail()\n  }, [match.params.id]);\n\n  return (\n    <Consumer>\n      { value => {\n        const show = value.shows.find(show => {\n          return Number(show.id) === Number(match.params.id)\n        });\n\n        return (\n          <div className=\"bg-gray-200 min-h-screen\">\n            <Header />\n            <div className=\"container mx-auto\">\n              { show ? (\n                <div>\n                  <h1 className=\"mt-4 mx-4 sm:mx-0 text-3xl font-semibold\">{ show.name }</h1>\n                  <Tabs>\n                    <TabList>\n                      <Tab>Title 1</Tab>\n                      <Tab>Title 2</Tab>\n                    </TabList>\n                \n                    <TabPanel>\n                      <h2>Any content 1</h2>\n                    </TabPanel>\n                    <TabPanel>\n                      <h2>Any content 2</h2>\n                    </TabPanel>\n                  </Tabs>\n                  {/* <div className=\"mt-3 flex items-baseline border-b-2 border-gray-400\">\n                    <Link onClick={() => setStep(1)} to=\"#\" className={`block py-4 px-3 focus:outline-none ${ step === 1 ? '-mb-2 border-b-2 border-indigo-500' : ''}`}>Genaral</Link>\n                    <Link onClick={() => setStep(2)} to=\"#\" className={`block py-4 px-3 focus:outline-none ${ step === 2 ? '-mb-2 border-b-2 border-indigo-500' : ''}`}>Casts <span className=\"text-gray-600\">({ cast.length || 0})</span></Link>\n                    <Link onClick={() => setStep(3)} to=\"#\" className={`block py-4 px-3 focus:outline-none ${ step === 3 ? '-mb-2 border-b-2 border-indigo-500' : ''}`}>Crew <span className=\"text-gray-600\">({ crew.length || 0})</span></Link>\n                  </div> */}\n                  {/* <div className=\"py-4\">\n                    {step === 1 ? (\n                      <div className=\"flex flex-wrap sm:flex-no-wrap mx-4\">\n                         <div className=\"w-full sm:w-auto flex-shrink-0\">\n                            <img className=\"w-40 object-cover\" src={show.image.original} />\n                          </div>\n                          <div className=\"mt-4 sm:mt-0 sm:ml-6\">\n                            <div className=\"text-lg\" dangerouslySetInnerHTML={{ __html: show.summary }} />\n                            <div className=\"mt-4\">\n                              <strong className=\"mr-2\">Genres:</strong> <span className=\"text-indigo-500\">{show.genres.toString()}</span>\n                            </div>\n                            <div className=\"mt-2\">\n                              <strong className=\"mr-2\">Show Type:</strong> <span className=\"text-indigo-500\">{show.type}</span>\n                            </div>\n                            <div className=\"mt-2\">\n                              <strong className=\"mr-2\">Schedule:</strong> <span className=\"text-indigo-500\">{show.schedule.days.toString()} at ({show.schedule.time})</span>\n                            </div>\n                            <div className=\"mt-2\">\n                              <strong className=\"mr-2\">Network:</strong> <span className=\"text-indigo-500\">{show.network.name}</span>\n                            </div>\n                            <div className=\"mt-2\">\n                              <strong className=\"mr-2\">Premiered:</strong> <span className=\"text-indigo-500\">{show.premiered}</span>\n                            </div>\n                            <div className=\"mt-2\">\n                              <strong className=\"mr-2\">Language:</strong> <span className=\"text-indigo-500\">{show.language}</span>\n                            </div>\n                            <div className=\"mt-2\">\n                              <strong className=\"mr-2\">Official Site:</strong> <a href={show.officialSite} className=\"text-indigo-500\">{show.officialSite}</a>\n                            </div>\n                          </div>\n                      </div>\n                    ) : step === 2 ? (\n                      <div className=\"flex flex-wrap\">\n                        {cast.map(item => {\n                          return (\n                            <div key={item.person.id} className=\"w-full sm:w-auto flex my-3 bg-white rounded p-4 shadow-md m-4\">\n                              <div>\n                                <img className=\"h-24 w-24 object-cover\" src={item.person.image.original} />\n                              </div>\n                              <div className=\"ml-4\">\n                                <h5 className=\"text-lg\">{item.person.name}</h5>\n                                <div><span className=\"text-indigo-500\">as</span> {item.character.name}</div>\n                              </div>\n                            </div>\n                          )\n                        })}\n                      </div>\n                    ): step === 3 ? (\n                      <div className=\"flex flex-wrap\">\n                        {crew.map(item => {\n                          return (\n                            <div key={item.person.id} className=\"w-full sm:w-auto flex my-3 bg-white rounded p-4 shadow-md m-4\">\n                              <div>\n                                <img className=\"h-24 w-24 object-cover\" src={item.person.image ? item.person.image.original : 'https://via.placeholder.com/150'} />\n                              </div>\n                              <div className=\"ml-4\">\n                                <h5 className=\"text-lg\">{item.person.name}</h5>\n                                <div className=\"text-gray-600\"><span className=\"text-indigo-500\">as</span> {item.type}</div>\n                              </div>\n                            </div>\n                          )\n                        })}\n                      </div>\n                    ) : null}\n                  </div> */}\n                </div>\n              ) : (\n                <h1>Loading...</h1>\n              )}\n            </div>\n          </div>\n        )\n      }}\n    </Consumer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}